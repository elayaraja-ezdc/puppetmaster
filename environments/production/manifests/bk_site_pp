## site.pp ##

# This file (/etc/puppetlabs/puppet/manifests/site.pp) is the main entry point
# used when an agent connects to a master and asks for an updated configuration.
#
# Global objects like filebuckets and resource defaults should go in this file,
# as should the default node definition. (The default node can be omitted
# if you use the console and don't define any other nodes in site.pp. See
# http://docs.puppetlabs.com/guides/language_guide.html#nodes for more on
# node definitions.)

## Active Configurations ##

# Disable filebucket by default for all File resources:
File { backup => false }

# DEFAULT NODE
# Node definitions in this file are merged with node data from the console. See
# http://docs.puppetlabs.com/guides/language_guide.html#nodes for more on
# node definitions.

# The default node definition matches any node lacking a more specific node
# definition. If there are no other nodes in this file, classes declared here
# will be included in every node's catalog, *in addition* to any classes
# specified in the console for that node.
package { 'hocon':
  ensure          => present,
  install_options => ['--no-ri', '--no-rdoc'],
  provider        => gem,
}
#vsphere_vm { '/HQ-DATACENTER/vm/PuppetServer/puppetagentwin2':
#  ensure => running,
#  resource_pool => '/ArkV-Developer/PuppetVM',
#  customization_spec => 'PuppetVM-Windows2016',
#  source => '/HQ-DATACENTER/vm/ArkV-Employees Folders/Kumar/Kur-win2016',
#}
exec { 'wait for custom spec configuration':
  command => "sleep 120",
  path => "/usr/bin:/bin",
}
#vsphere_vm { '/HQ-DATACENTER/vm/PuppetServer/testvm3':
#  ensure => running,
#  resource_pool => '/ArkV-Developer/PuppetVM',
#  customization_spec => 'puppetLinux',
#  source => '/HQ-DATACENTER/vm/PuppetServer/elaya-centos7',
#}


node default {
  # This is where you can declare classes for all nodes.
  # Example:
  #   class { 'my_class': }
# include '::mysql::server'
}


node 'node1.arklab.local' {
  include ihis
  file { '/root/test.sh':
    ensure => present,
    content => "service firewalld start",
  }
  exec { 'Execute test.sh shell script':
    command => "/bin/bash /root/test.sh",
  }
 class { 'nginx':}
}
node 'puppetagentwin2.arklab.local' {
  #include 'mssqlserver'
  file { 'C:\test_txt.ps1':
    ensure => present,
    content => "New-Item -Path 'C:\file.txt' -ItemType File -Force",
    #content => "Write-Host 'Hello, World!'",
  }
  exec { 'Create a new text file using powershell':
    command => 'C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -executionpolicy remotesigned -file C:\test_txt.ps1',
  }
}
node 'puppetwindowsag.arklab.local' {
 # include 'mssqlserver'
  file { 'C:\test_txt.ps1':
    ensure => present,
    content => "New-Item -Path 'C:\file.txt' -ItemType File -Force",
    #content => "Write-Host 'Hello, World!'",
  }
  exec { 'Create a new text file using powershell':
    command => 'C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -executionpolicy remotesigned -file C:\test_txt.ps1',
  }
}


#node 'win-3gkr41o875p.arklab.local' {
#  file { 'C:\test_txt.ps1':
#    ensure => present,
#    content => "New-Item -Path 'C:\file.txt' -ItemType File -Force",
#    #content => "Write-Host 'Hello, World!'",
#  }
#  exec { 'Create a new text file using powershell':
#    command => 'C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -executionpolicy remotesigned -file C:\test_txt.ps1',
#  }
#}

