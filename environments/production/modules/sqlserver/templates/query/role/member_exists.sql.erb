USE [<%= @database %>];
DECLARE
  @role varchar(128) = '<%= @role %>',
  @member varchar(128),
  @error_msg varchar(250);

<% @members.each do |member| %>
SET @member = '<%= member %>';
SET @error_msg = 'The member [<%= member %>] is <% if @ensure == 'present'%>not <% end %>a member of the role [<%=@role %>]';
<%= scope.function_template(['sqlserver/snippets/role/member_exists.sql.erb']) -%>
    THROW 51000, @error_msg, 10;
<% end -%>

<% if @members_purge %>
IF EXISTS(
SELECT m.name FROM sys.<%= @type.downcase %>_role_members rm
    JOIN sys.<%= @type.downcase %>_principals r ON rm.role_principal_id = r.principal_id
    JOIN sys.<%= @type.downcase %>_principals m ON rm.member_principal_id = m.principal_id
    WHERE r.name = '<%= @role %>'
    <% if !@members.empty? %>AND m.name NOT IN (<%= @members.collect{|m| "'#{m}'"}.join(',') %>)<% end %>
) THROW 51000, 'Unlisted Members in Role, will be purged', 10;
<% end -%>
